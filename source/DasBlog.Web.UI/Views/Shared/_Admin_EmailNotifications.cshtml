@using DasBlog.Web.Models.AdminViewModels

@inject IDasBlogSettings dasBlogSettings
@model DasBlogSettingsViewModel

<div class="row gy-2 gx-3 align-items-md-start">
    <div class="col-sm-4">
        <div class="form-floating">
            @Html.TextBoxFor(m => @Model.SiteConfig.SmtpServer, null, new { @class = "form-control", id = "smtpServer" })
            @Html.LabelFor(m => @Model.SiteConfig.SmtpServer, null, new { @class = "form-label", @for = "smtpServer" })
        </div>
        @Html.ValidationMessageFor(m => m.SiteConfig.SmtpServer, null, new { @class = "text-danger" })
    </div>
    <div class="col-sm-4">
        <div class="form-floating">
            @Html.TextBoxFor(m => @Model.SiteConfig.SmtpPort, null, new { @class = "form-control", id = "smtpPort" })
            @Html.LabelFor(m => @Model.SiteConfig.SmtpPort, null, new { @class = "form-label", @for = "smtpPort" })
        </div>
        @Html.ValidationMessageFor(m => m.SiteConfig.SmtpPort, null, new { @class = "text-danger" })
    </div>
</div>

<div class="row gy-2 gx-3 align-items-md-start">
    <div class="col-sm-4">
        <div class="form-floating">
            @Html.TextBoxFor(m => @Model.SiteConfig.SmtpUserName, null, new { @class = "form-control", id = "smtpUserName" })
            @Html.LabelFor(m => @Model.SiteConfig.SmtpUserName, null, new { @class = "form-label", @for = "smtpUserName" })
        </div>
        @Html.ValidationMessageFor(m => m.SiteConfig.SmtpUserName, null, new { @class = "text-danger" })
    </div>
    <div class="col-sm-4">
        <div class="form-floating">
            @Html.PasswordFor(m => @Model.SiteConfig.SmtpPassword, new { @class = "form-control", id = "smtpPassword" })
            @Html.LabelFor(m => @Model.SiteConfig.SmtpPassword, null, new { @class = "form-label", @for = "smtpPassword" })
        </div>
        @Html.ValidationMessageFor(m => m.SiteConfig.SmtpPassword, null, new { @class = "text-danger" })
    </div>
</div>

<div class="d-flex flex-wrap">
    <div class="col-auto">
        @Html.CheckBoxFor(m => @Model.SiteConfig.EnableSmtpAuthentication, new { @class = "form-check-input me-1" })
        @Html.LabelFor(m => @Model.SiteConfig.EnableSmtpAuthentication, null, new { @class = "col-check-label me-3" })
    </div>
    <div class="col-auto">
        @Html.CheckBoxFor(m => @Model.SiteConfig.UseSSLForSMTP, new { @class = "form-check-input form-check-input me-1" })
        @Html.LabelFor(m => @Model.SiteConfig.UseSSLForSMTP, null, new { @class = "col-check-label me-3" })
    </div>
</div>
<div class="row gy-2 gx-3 align-items-md-start">
    <div class="col-sm-4">
        <div class="form-floating">
            @Html.TextBoxFor(m => @Model.SiteConfig.SmtpFromEmail, null, new { @class = "form-control", id = "smtpFromEmail" })
            @Html.LabelFor(m => @Model.SiteConfig.SmtpFromEmail, null, new { @class = "form-label", @for = "smtpFromEmail" })
        </div>
        @Html.ValidationMessageFor(m => m.SiteConfig.SmtpFromEmail, null, new { @class = "text-danger" })
    </div>
</div>

<div class="row gy-2 gx-3 align-items-md-start">
    <div class="col-sm-4">
        @Html.CheckBoxFor(m => @Model.SiteConfig.SendCommentsByEmail, new { @class = "form-check-input form-check-input" })
        @Html.LabelFor(m => @Model.SiteConfig.SendCommentsByEmail, null, new { @class = "col-check-label col-sm-10" })
    </div>
</div>

<hr />

<div class="row gy-2 gx-3 align-items-md-start">
    <div class="col-sm-4">
        <input asp-controller="Admin" asp-action="TestEmail" type="submit" name="submit" value="Send test Email" class="btn-default" />
    </div>
</div>