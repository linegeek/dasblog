@using DasBlog.Web.Models.AdminViewModels

@inject IDasBlogSettings dasBlogSettings
@model DasBlogSettingsViewModel

<div class="form-group row mb-3">

    @Html.LabelFor(m => @Model.SiteConfig.SecurityStyleSources, null, new { @class = "col-form-label col-sm-2" })
    <div class="col-sm-10">
        @Html.TextBoxFor(m => @Model.SiteConfig.SecurityStyleSources, null, new { @class = "form-control sm-10" })
    </div>
    @Html.ValidationMessageFor(m => m.SiteConfig.SecurityStyleSources, null, new { @class = "text-danger" })

</div>

<div class="form-group row mb-3">

    @Html.LabelFor(m => @Model.SiteConfig.SecurityScriptSources, null, new { @class = "col-form-label col-sm-2" })
    <div class="col-sm-10">
        @Html.TextBoxFor(m => @Model.SiteConfig.SecurityScriptSources, null, new { @class = "form-control sm-10" })
    </div>
    @Html.ValidationMessageFor(m => m.SiteConfig.SecurityScriptSources, null, new { @class = "text-danger" })

</div>

<div class="form-group row mb-3">

    @Html.LabelFor(m => @Model.SiteConfig.DefaultSources, null, new { @class = "col-form-label col-sm-2" })
    <div class="col-sm-5">
        @Html.TextBoxFor(m => @Model.SiteConfig.DefaultSources, null, new { @class = "form-control sm-10" })
    </div>
    @Html.ValidationMessageFor(m => m.SiteConfig.DefaultSources, null, new { @class = "text-danger" })

</div>