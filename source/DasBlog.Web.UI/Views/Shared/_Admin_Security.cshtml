@using DasBlog.Web.Models.AdminViewModels

@inject IDasBlogSettings dasBlogSettings
@model DasBlogSettingsViewModel

<div class="row gy-2 gx-3 align-items-md-start mb-3">
    <div class="col-sm-12">
        <div class="form-floating">
            @Html.TextBoxFor(m => @Model.SiteConfig.SecurityStyleSources, null, new { @class = "form-control", id = "securityStyleSources" })
            @Html.LabelFor(m => @Model.SiteConfig.SecurityStyleSources, null, new { @class = "form-label", @for = "securityStyleSources" })
        </div>
        @Html.ValidationMessageFor(m => m.SiteConfig.SecurityStyleSources, null, new { @class = "text-danger" })
    </div>
</div>

<div class="row gy-2 gx-3 align-items-md-start mb-3">
    <div class="col-sm-12">
        <div class="form-floating">
            @Html.TextBoxFor(m => @Model.SiteConfig.SecurityScriptSources, null, new { @class = "form-control", id = "securityScriptSources" })
            @Html.LabelFor(m => @Model.SiteConfig.SecurityScriptSources, null, new { @class = "form-label", @for = "securityScriptSources" })
        </div>
        @Html.ValidationMessageFor(m => m.SiteConfig.SecurityScriptSources, null, new { @class = "text-danger" })
    </div>
</div>

<div class="row gy-2 gx-3 align-items-md-start mb-3">
    <div class="col-sm-4">
        <div class="form-floating">
            @Html.TextBoxFor(m => @Model.SiteConfig.DefaultSources, null, new { @class = "form-control", id = "defaultSources" })
            @Html.LabelFor(m => @Model.SiteConfig.DefaultSources, null, new { @class = "form-label", @for = "defaultSources" })
        </div>
        @Html.ValidationMessageFor(m => m.SiteConfig.DefaultSources, null, new { @class = "text-danger" })
    </div>
</div>
